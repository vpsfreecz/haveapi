<%
def format_param_type(param)
  return param[:type] if param[:type] != 'Resource'
  "<a href=\"#root-#{param[:resource].join('-')}-show\">#{param[:type]}</a>"
end

def format_validators(validators)
  ret = ''
  return ret if validators.nil?

  validators.each do |name, opts|
    ret += "<h5>#{name.to_s.capitalize}</h5>"
    ret += '<dl>'
    opts.each do |k, v|
      ret += "<dt>#{k}</dt><dd>#{v}</dd>"
    end
    ret += '</dl>'
  end

  ret
end
%>

<% def render_auth_body(name, info) %>
  <h2 id="auth-<%= name %>"><%= name.to_s.humanize %></h2>

  <p><%= info[:description] %></p>

  <% if name == :token %>
    <dl>
      <dt>HTTP header:</dt>
      <dd><%= info[:http_header] %></dd>
      <dt>Query parameter:</dt>
      <dd><%= info[:query_parameter] %></dd>
    </dl>
  <% end %>

  <% if info[:resources] %>
    <h2>Resources</h2>
    <% info[:resources].each do |resource, desc| %>
      <% render_resource_body(resource.to_s, desc, 'auth') %>
    <% end %>
  <% end %>

  <% baseid = "auth-#{name}" %>
  <div id="<%= baseid %>-tabbar"></div>

  <div id="<%= baseid %>-examples">
    <% HaveAPI::ClientExample.clients.each_with_index do |client, i| %>
      <div id="<%= "#{baseid}-#{i}" %>">
        <% render_client_auth(client, name) %>
      </div>
    <% end %>
  </div>

  <script type="text/javascript">
  nojsTabs({
    tabs: document.getElementById('<%= "#{baseid}-examples" %>'),
    titleSelector: 'h4',
    tabBar: document.getElementById('<%= "#{baseid}-tabbar" %>'),
    hiddenClass: 'tab-hidden',
    activeClass: 'active',
    createElement: function (el) {
      if (el.tagName == 'UL')
        el.classList.add('nav', 'nav-tabs');

      else if (el.tagName == 'LI')
        el.setAttribute('role', 'presentation');
    }
  });
  </script>
<% end %>

<% def render_resource_body(resource, info, path = [], prefix='root', name=nil) %>
  <% name ||= resource.humanize %>
  <% resource_path = path.clone << resource %>
  <% resource_info = info %>
  <h2 class="resource" id="<%= "#{prefix}-#{resource}" %>"><%= resource.humanize %></h2>
  <div class="resource-body">
    <p><%= info[:description] %></p>

    <div class="actions">
      <% info[:actions].each do |action, info| %>
        <h3 id="<%= "#{prefix}-#{resource}-#{action}" %>"><%= name %> # <%= action.capitalize %></h3>
        <div class="action">
          <dl>
            <dt>URL:</dt>
            <dd><%= info[:method] %> <%= info[:url] %></dd>
            <dt>Description:</dt>
            <dd><%= info[:description] %></dd>
            <dt>Authentication required:</dt>
            <dd><%= info[:auth] ? 'yes' : 'no' %></dd>
            <dt>Aliases:</dt>
            <dd><%= info[:aliases].join(', ') %></dd>
            <dt>Blocking:</dt>
            <dd><%= info[:blocking] ? 'yes' : 'no' %></dd>
          </dl>

          <h4>Input parameters</h4>
          <div class="parameters">
            <% if info[:input][:parameters].empty? %>
              <p>No parameters.</p>
            <% else %>
              <dl>
                <dt>Layout:</dt>
                <dd><%= info[:input][:layout] %></dd>
                <dt>Namespace:</dt>
                <dd><%= info[:input][:namespace] %></dd>
              </dl>

              <table class="table table-striped table-hover">
                <tr>
                  <th>Label</th>
                  <th>Name</th>
                  <th>Required</th>
                  <th>Type</th>
                  <th>Validators</th>
                  <th>Default</th>
                  <th>Description</th>
                </tr>
                <% info[:input][:parameters].each do |param, info| %>
                  <tr>
                    <td><%= info[:label] %></td>
                    <td><%= param %></td>
                    <td><%= info[:required] ? 'yes' : 'no' %></td>
                    <td><%= format_param_type(info) %></td>
                    <td><%= format_validators(info[:validators]) %></td>
                    <td><%= info[:default] == :_nil ? '' : info[:default] %></td>
                    <td><%= info[:description] %></td>
                  </tr>
                <% end %>
              </table>
            <% end %>
          </div>

          <h4>Output parameters</h4>
          <div class="parameters">
            <% if info[:output][:parameters].empty? && info[:output][:format].nil? %>
              <p>No parameters.</p>
            <% else %>
              <dl>
                <dt>Layout:</dt>
                <dd><%= info[:output][:layout] %></dd>
                <dt>Namespace:</dt>
                <dd><%= info[:output][:namespace] %></dd>
              </dl>

              <table class="table table-striped table-hover">
                <tr>
                  <th>Label</th>
                  <th>Name</th>
                  <th>Type</th>
                  <th>Description</th>
                </tr>
                <% info[:output][:parameters].each do |param, info| %>
                  <tr>
                    <td><%= info[:label] %></td>
                    <td><%= param %></td>
                    <td><%= format_param_type(info) %></td>
                    <td><%= info[:description] %></td>
                  </tr>
                <% end %>
              </table>
            <% end %>
          </div>

          <div class="action-self-description">
            <h4>Self-description</h4>
            <pre><code><%= JSON.pretty_generate(info) %></code></pre>
          </div>

          <% unless info[:examples].empty? %>
            <h4>Examples</h4>
            <% info[:examples].each_with_index do |example, i| %>
                <h5><%= example[:title].empty? ? "Example ##{i}" : example[:title] %></h5>
                <p><%= example[:comment] %></p>

                <% baseid = "example-#{resource_path.join('.')}-#{action}-#{i}" %>
                <%# placeholder for tabs %>
                <div id="<%= "#{baseid}-tabbar" %>"></div>

                <div id="<%= "#{baseid}-examples" %>">
                  <% HaveAPI::ClientExample.clients.each_with_index do |client, j| %>
                    <div id="<%= "#{baseid}-#{j}" %>">
                      <%
                        render_client_example(
                          client,
                          resource_path,
                          resource_info,
                          action,
                          info,
                          example
                        )
                      %>
                    </div>
                  <% end %>
                </div>

                <script type="text/javascript">
                nojsTabs({
                  tabs: document.getElementById('<%= "#{baseid}-examples" %>'),
                  titleSelector: 'h6',
                  tabBar: document.getElementById('<%= "#{baseid}-tabbar" %>'),
                  hiddenClass: 'tab-hidden',
                  activeClass: 'active',
                  createElement: function (el) {
                    if (el.tagName == 'UL')
                      el.classList.add('nav', 'nav-tabs');

                    else if (el.tagName == 'LI')
                      el.setAttribute('role', 'presentation');
                  }
                });
                </script>
            <% end %>
          <% end %>

        </div>
      <% end %>
    </div>

    <% unless info[:resources].empty? %>
      <% info[:resources].each do |r, i| %>
        <% render_resource_body(r, i, resource_path, "#{prefix}-#{resource}", "#{name}.#{r.humanize}") %>
      <% end %>
    <% end %>

  </div> <!-- resource -->
<% end %>

<% def render_client_init(client) %>
  <h4><%= client.label %></h4>
  <pre><code><%= client.init(host, base_url, api_version) %></code></pre>
<% end %>

<% def render_client_auth(client, method) %>
  <h4><%= client.label %></h4>
  <pre><code><%= client.auth(host, base_url, api_version, method) %></code></pre>
<% end %>

<% def render_client_example(client, r_name, resource, a_name, action, example) %>
  <h6><%= client.label %></h6>
  <pre><code><%= client.example(host, base_url, api_version, r_name, resource, a_name, action, example) %></code></pre>
<% end %>

<h1 id="api">API v<%= @v %></h1>
<p>
  This page contains a list of resources available in API v<%= @v %>, their actions,
  description, parameters and example usage.
</p>

<div id="init-tabbar"></div>

<div id="init-examples">
  <% HaveAPI::ClientExample.clients.each_with_index do |client, i| %>
    <div id="<%= "init-#{i}" %>">
      <% render_client_init(client) %>
    </div>
  <% end %>
</div>

<script type="text/javascript">
nojsTabs({
  tabs: document.getElementById('init-examples'),
  titleSelector: 'h4',
  tabBar: document.getElementById('init-tabbar'),
  hiddenClass: 'tab-hidden',
  activeClass: 'active',
  createElement: function (el) {
    if (el.tagName == 'UL')
      el.classList.add('nav', 'nav-tabs');

    else if (el.tagName == 'LI')
      el.setAttribute('role', 'presentation');
  }
});
</script>

<h1 id="auth">Authentication methods</h1>
<% @help[:authentication].each do |name, info| %>
    <% render_auth_body(name, info) %>
<% end %>

<h1 id="resources">Resources</h1>
<p>Follows a list of all resources in this API and their actions.</p>

<% @help[:resources].each do |resource, info| %>
    <% render_resource_body(resource, info) %>
<% end %>
</div>

<script type="text/javascript">
  $(document).ready(function(){
    // Login/logout user
    $('.authentication a.login').click(function(event){
      $.ajax({
        type: 'GET',
        url: this.href,
        async: false,
        complete: function (){
          window.location.reload();
        }
      });

      event.preventDefault();
    });

    $('.authentication a.logout').click(function(event){
      $.ajax({
        type: 'GET',
        url: this.href,
        async: true,
        username: '_log',
        password: 'out',
        complete: function() {
          window.location.reload();
        }
      });

      event.preventDefault();
    });

    // Show/hide button for help messages
    $('.action .action-self-description').each(function(i, el){
      // replace text by show/hide button
      var div = $(el);
      var pre = div.find('pre');
      var h4 = div.find('h4');
      h4.text('');

      h4.append(
        $('<button>')
          .attr('type', 'button')
          .addClass('btn btn-primary btn-sm')
          .text('Show self-description')
          .click(function(event) {
            var button = $(this);
            button.toggleClass('active');
            pre.toggle('fast');

            if(button.hasClass('active'))
              button.text('Hide self-description');
            else
              button.text('Show self-description');
          })
      );

      $(el).find('pre').hide();
    });
  });
</script>
